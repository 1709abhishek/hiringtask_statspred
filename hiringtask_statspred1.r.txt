

install.packages('tseries')
install.packages('forecast')

library(tseries)
library(forecast)

setwd("C:/Users/abhishek/Desktop/assignment")
calls <- read.csv("oct_march.csv")
View(calls)

View(calls$views)


cycle(calls$views)

boxplot(calls$views~cycle(calls$views))
#step1 plot series
plot(calls$views, type="l")


#build baseline
forecast1 <- meanf(calls$views,90)
forecast2 <- naive(calls$views,90)
plot(forecast1)
plot(forecast2)


summary(forecast1)
summary(forecast2)

#mean error (ME), 
#root mean squared error (RMSE), 
#mean absolute error (MAE), 
#mean percentage error (MPE), 
#mean absolute percentage error (MAPE), 
#mean absolute scaled error (MASE)


accuracy(forecast1)
accuracy(forecast2)

#define interval of forecast 
#For 80%- predvalue +- (1.28*stddev of residuals)
#For 95%- predvalue +- (1.96*stddev of residuals)


#use decomposition to studying time series data, and 
#exploring the historical changes over time
#STL means Seasonal Trend Decomposition using Loess,The 
#two main parameters to be chosen when using STL are the 
#trend window (t.window) and seasonal window (s.window). 
#These control how rapidly the trend and seasonal components 
#can change. Small values allow more rapid change.
calls_ts <- ts(calls[,2],start=c(2014,1),freq=7)
plot.ts(calls_ts)
decom <- stl(calls_ts, s.window="periodic")
plot(decom)
head(calls_ts,100)



#HOLT WINTERS TECHNIQUE
hws<-HoltWinters(calls_ts)

views.pred <- predict(hws,n.ahead=90,prediction.interval=T)

hws

#Predicted values
views.pred

#Plot the base level graph, giving limits to x
#par(mfrow = c(1,1)) 
plot.ts(calls_ts)

#Historical Fitted values, now third column is trend. Xhat is prediction
hws$fitted
plot.new()

#Fit the historical fitted values
lines(hws$fitted[,1],col="green")

#Fit the future predicted values
lines(sales.pred[,1],col="blue")

#Fit the upper interval predicted values
lines(sales.pred[,2],col="red")

#Fit the upper interval predicted values
lines(sales.pred[,3],col="red")

#MAPE calculation

act <- calls_ts[-c(1:12)]
prd <- hws$fitted[,1]
mean(abs((act-prd)/act))

#univariate seasonal forecasting using arima 
fit <- auto.arima(calls$views,seasonal=TRUE)
summary(fit)

accuracy(forecast(fit))
plot(forecast(fit,h=10),include=90)

#For subscriber Prediction

fit <- auto.arima(calls$subscriber,seasonal=TRUE)
summary(fit)

accuracy(forecast(fit))
plot(forecast(fit,h=10),include=90)


#For videoscount prediction

fit <- auto.arima(calls$videoscount,seasonal=TRUE)
summary(fit)

accuracy(forecast(fit))
plot(forecast(fit,h=10),include=90)
